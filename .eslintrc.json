{
  "env": {
    "browser": true,
    "es2021": true,
    "node": true,
    "jest": true
  },
  "globals": { "JSX": "readonly", "Chart": "readonly", "NodeJS": "readonly" },
  "extends": [
    "eslint:recommended",

    "plugin:react/recommended",
    "plugin:react-hooks/recommended",

    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",

    "airbnb",

    "plugin:import/recommended",
    "plugin:import/typescript",

    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 12,
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "plugins": ["react", "react-hooks", "@typescript-eslint", "import"],
  "rules": {
    "react/jsx-filename-extension": [1, { "extensions": [".jsx", ".tsx"] }],

    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": ["error"],

    "import/extensions": [
      "error",
      "ignorePackages",
      { "js": "never", "jsx": "never", "ts": "never", "tsx": "never" }
    ],

    "jsx-a11y/label-has-associated-control": "off",

    // prevent wrong warning with typescript overloads
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": ["error"],

    "no-dupe-class-members": "off",
    "@typescript-eslint/no-dupe-class-members": ["error"],

    "lines-between-class-members": "off",
    "@typescript-eslint/lines-between-class-members": [
      "error",
      "always",
      { "exceptAfterSingleLine": true }
    ],

    // "react/jsx-curly-newline": "off",

    // turned off because typescript, functional components and default props
    // don't seem to be good friends. Decided to manually handle defaults for
    // optional props instead
    "react/require-default-props": "off",
    "react/jsx-props-no-spreading": "off",

    "camelcase": "off"

    // "import/no-extraneous-dependencies": ["error", { "devDependencies": true }], **trying to resolve the electron issue
  },
  // "settings": "import/core-modules: [ electron ]",  **trying to resolve the electron issue
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true
      }
    }
  },
  "root": true
}
